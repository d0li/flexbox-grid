{"name":"Flexbox Grid","tagline":"flexbox-grid","body":"# Flexbox Grid.\r\nFlexbox Grid est un système de grille complet en CSS. Il utilise les flexbox layout ce qui lui permet une meilleure gestion des positionnements. Il est compatible IE 10+, ce qui lui permet de s'implémenter dans des projets de plus en plus vaste.\r\n\r\n\r\n## Installation\r\n```html\r\n<link rel=\"stylesheet\" href=\"https://rawgit.com/w-jerome/flexbox-grid/master/src/flexbox-grid.min.css\">\r\n```\r\n\r\n## Introduction\r\nFlexbox Grid utilise les classes pour se structurer. Les classes sont nommé sans abréviations, ce qui permet pour un nouvel utilisateur de comprendre plus facilement l'utilisation de l'outil.\r\n\r\nIl utilise toujours le plus petit écran renseigné comme point de départ, par exemple si une colonne n'a que la classe `small-6` il va l'appliquer sur tous les écrans, cela évite d'écrire `small-6 medium-6 large-6 xlarge-6 xxlarge-6`\r\n\r\nLes points de rupture (breakpoints) sont ceux utilisé par Foundation :\r\n\r\n    small   : all screen\r\n    medium  : min-width 641px\r\n    large   : min-width 1025px\r\n    xlarge  : min-width 1441px\r\n    xxlarge : min-width 1921px\r\n\r\n\r\n***\r\n\r\n## Premier pas\r\n\r\nLe système de grille est similaire aux autres frameworks, nous utilisons un conteneur avec la classe `row` et des colonnes avec la classe `column` (ou `columns`). Pour définir la taille des colonnes flexbox-grid utilise le principe des colonnes divisé en 12, nous leurs attribuerons des classes définissants la taille de l'écran voulu suivi de la taille de la colonne :\r\n\r\n```html\r\nclasse=\"small-12 medium-6 large-3\"\r\n```\r\n\r\n### Basique\r\n\r\n```html\r\n<div class=\"row\">\r\n    <div class=\"column small-3\">\r\n        column small-3\r\n    </div>\r\n    <div class=\"column small-3\">\r\n        column small-3\r\n    </div>\r\n    <div class=\"column small-3\">\r\n        column small-3\r\n    </div>\r\n    <div class=\"column small-3\">\r\n        column small-3\r\n    </div>\r\n</div>\r\n```\r\n\r\nIl est important de noter que par défaut si une colonne n'a plus de place, elle va automatiquement se placer sur une nouvelle ligne. Il n'y a donc pas besoin d'attribuer de classe `end` une fois que la `row` est pleine.\r\n\r\nPar ailleurs, si la `row` n'est pas pleine, elle ne va pas s'étendre dans le reste de la ligne et restera aligné à gauche.\r\n\r\n#### Sans gouttières\r\n\r\nPar défaut une gouttière de 1em est attribuée, mais il est possible de supprimer cette gouttière sur l'ensemble des colonnes ou sur une seule en particulier, l'inverse est également possible :\r\n\r\n```html\r\n<div class=\"row no-gutter\">\r\n    <div class=\"column small-3\">\r\n        small-3\r\n    </div>\r\n    <div class=\"column small-3 no-gutter\">\r\n        small-3  no-gutter\r\n    </div>\r\n    <div class=\"column small-3 gutter\">\r\n        small-3 gutter\r\n    </div>\r\n    <div class=\"column small-3 gutter\">\r\n        small-3 gutter\r\n    </div>\r\n</div>\r\n```\r\n\r\n#### Inverser les colonnes\r\n\r\nPar défaut les colonnes sont alignés de gauche à droite, vous pouvez inverser l'ordre avec la propriété `row-reverse` :\r\n\r\n```html\r\n<div class=\"row row-reverse\">\r\n    <div class=\"column small-3\">\r\n        Colonne 1\r\n    </div>\r\n    <div class=\"column small-3 no-gutter\">\r\n        Colonne 2\r\n    </div>\r\n    <div class=\"column small-3 gutter\">\r\n        Colonne 3\r\n    </div>\r\n    <div class=\"column small-3 gutter\">\r\n        Colonne 4\r\n    </div>\r\n</div>\r\n```\r\n\r\n#### Orientation : paysage (landscape)\r\n\r\nPour les écrans de petite taille (small et medium) il peut arriver que l'on veut des colonnes de taille différente en portrait ou en paysage, flexbox-grid implémente cette fonctionnalité avec les classes `*-landscape-*` :\r\n\r\n```html\r\n<div class=\"row\">\r\n    <div class=\"column small-12 small-landscape-6\">\r\n        small-12 small-landscape-6\r\n    </div>\r\n    <div class=\"column small-12 small-landscape-6\">\r\n        small-12 small-landscape-6\r\n    </div>\r\n    <div class=\"column small-12 small-landscape-6\">\r\n        small-12 small-landscape-6\r\n    </div>\r\n    <div class=\"column small-12 small-landscape-6\">\r\n        small-12 small-landscape-6\r\n    </div>\r\n</div>\r\n```\r\n***\r\n\r\n### Gestion des alignements\r\n\r\n#### Horizontale\r\n\r\nPar défaut, les colonnes sont aligné à gauche, mais il est possible de les centrer ou de les aligner à droite avec les classe `content-left`, `content-center` et `content-right` (à appliquer sur le conteneur `row`) :\r\n\r\n```html\r\n<div class=\"row content-center\">\r\n    <div class=\"column small-3\">\r\n        small-3\r\n    </div>\r\n    <div class=\"column small-3\">\r\n        small-3\r\n    </div>\r\n</div>\r\n```\r\n\r\n#### Verticale\r\n\r\nDe base les colonnes sont aligné en haut du conteneur (`row`), mais il est également possible de les positionner au centre ou en bas avec les classes `column-begin-top`, `column-begin-bottom` et `column-center` (à appliquer sur le conteneur `row`) :\r\n\r\n```html\r\n<div class=\"row content-center column-center\">\r\n    <div class=\"column small-3\">\r\n        small-3\r\n    </div>\r\n    <div class=\"column small-3\">\r\n        small-3\r\n    </div>\r\n</div>\r\n```\r\n\r\nIl existe d'autres options d'alignement verticale comme `column-full-height` et `column-baseline`, qui s'applique respectivement à la hauteur complète du conteneur et sur la ligne de base des textes :\r\n\r\n```html\r\n<div class=\"row column-full-height column-center\" style=\"height: 150px;\">\r\n    <div class=\"column small-3\" style=\"background: #f6f6f6;\">\r\n        small-3\r\n    </div>\r\n    <div class=\"column small-3\" style=\"background: #f6f6f6;\">\r\n        small-3\r\n    </div>\r\n</div>\r\n```","google":"UA-62619325-1","note":"Don't delete this file! It's used internally to help with page regeneration."}